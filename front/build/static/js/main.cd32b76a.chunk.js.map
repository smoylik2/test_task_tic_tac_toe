{"version":3,"sources":["components/GameScreen/GameTitle/PlayerInfo/playerinfo.module.scss","components/Navigation/navigation.module.scss","components/GameScreen/ModalScreen/simplemodal.module.scss","components/GameScreen/GameHistory/gamehistory.module.scss","components/ScoreScreen/ScoreHistory/scorehistory.module.scss","components/GameScreen/GameTitle/WarnMessage/warnmessage.module.scss","components/GameScreen/GameField/gamefield.module.scss","app.module.scss","components/GameScreen/GameTitle/gametitle.module.scss","components/GameScreen/GameHistory/HistoryLine/historyline.module.scss","components/GameScreen/GameTitle/PlayerInfo/PlayerInfo.js","components/GameScreen/GameTitle/WarnMessage/WarnMessage.js","components/GameScreen/GameTitle/GameTitle.js","redux/types.js","redux/actions.js","components/GameScreen/GameField/GameField.js","components/GameScreen/GameHistory/HistoryLine/HistoryLine.js","components/GameScreen/GameHistory/GameHistory.js","components/GameScreen/ModalScreen/SimpleModal.js","components/GameScreen/GameScreen.js","components/ScoreScreen/ScoreHistory/ScoreHistory.js","components/ScoreScreen/ScoreScreen.js","components/Navigation/Navigation.js","App.js","api/axios.js","api/constants.js","api/Api.js","redux/saga.js","redux/initState.js","redux/ScoreReducer.js","redux/GameReducer.js","redux/redux-store.js","index.js"],"names":["module","exports","PlayerInfo","name","team","score","active","position","className","s","block","playerName","forRight","forLeft","WarnMessage","message","text","useSelector","state","game","useState","viewMessage","setViewMessage","useEffect","setTimeout","GameTitle","messageLine","result","ai","player","SET_SERVER_DATA","UPDATE_GAME_RESULT","RESET_GAME_FIELD","ERROR_MESSAGE","SET_MOVE_ACT","NEXT_GAME","START_GAME_AGAIN","NEW_GAME","START_NEW_GAME","resetGameField","newField","type","errorMessage","setNewGame","newScore","GameField","dispatch","useDispatch","board","disabledCells","setDisabledCells","sendMoveData","index","setMoveActionCreator","arrCells","flat","map","v","i","value","key","cell","data-index","onClick","e","target","innerHTML","dataset","HistoryLine","lastStep","GameHistory","historyGame","history","arrHistory","length","move","title","list","SimpleModal","submitAction","jacket","submitBtn","GameScreen","endGame","end","_timeConverter","timestamp","a","Date","getHours","getMinutes","getSeconds","ScoreHistory","historyScore","winner","ts","ScoreScreen","Navigation","location","useLocation","pathname","btnLikeLink","to","App","Helmet","path","component","exact","request","axios","withCredentials","baseURL","headers","API","get","then","res","data","post","cellIndex","sagaWatcher","setData","setMove","nextGame","resetGame","newGame","all","takeEvery","call","newGameData","newScoreData","put","newFieldData","initGameState","nextMove","initScoreState","X","O","ScoreReducer","action","createWinnerMessage","createHistoryLog","objOld","objNew","arrOld","indexes","reduce","t","concat","filter","find","createHistoryLogAtStart","arr","aiTeam","found","findIndex","GameReducer","saga","createSagaMiddleware","reducers","combineReducers","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,WAAa,+BAA+B,OAAS,2BAA2B,KAAO,yBAAyB,MAAQ,0BAA0B,SAAW,6BAA6B,QAAU,8B,mBCAxPD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,YAAc,kC,mBCAlED,EAAOC,QAAU,CAAC,OAAS,4BAA4B,MAAQ,2BAA2B,QAAU,6BAA6B,UAAY,iC,mBCA7ID,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,MAAQ,2BAA2B,KAAO,4B,mBCA/FD,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,MAAQ,4BAA4B,KAAO,6B,mBCAjGD,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,QAAU,+B,mBCA/DD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,KAAO,0B,mBCA1DD,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,MAAQ,2B,mBCA1BD,EAAOC,QAAU,CAAC,MAAQ,6B,2JCgBXC,EAdI,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SAC5C,OACI,sBAAKC,UAAWC,IAAEC,MAAlB,UACI,oBAAIF,UAAS,UAAKC,IAAEE,WAAP,YAAqBL,GAAUG,IAAEH,QAA9C,SAAyDH,IACzD,sBAAMK,UAAS,UAAKC,IAAEL,KAAP,YAA4B,UAAbG,EAAuBE,IAAEG,SAAW,MAAlE,qBACUR,EADV,QAGA,sBAAMI,UAAS,UAAKC,IAAEJ,MAAP,YAA6B,SAAbE,EAAsBE,IAAEI,QAAU,MAAjE,SACKR,Q,yBCgBFS,EAvBK,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACdC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKJ,WADZ,EAEKK,oBAAS,GAFd,mBAE1BC,EAF0B,KAEbC,EAFa,KAY/B,OARAC,qBAAU,WACNC,YAAW,kBAAMF,GAAe,KAAQ,OAEzC,CAACD,IACJE,qBAAU,WACND,GAAe,KAChB,CAACN,IAEI,mCACCK,EACK,qBAAKb,UAAWC,IAAEC,MAAlB,SACE,oBAAIF,UAAWC,IAAEM,QAAjB,SAA2BA,MAE7B,QCDHU,EAdG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACZX,EAAUE,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKJ,WAC1CV,EAAQY,aAAY,SAAAC,GAAK,OAAIA,EAAMb,SACnCD,EAAOa,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKQ,UAE3C,OACI,sBAAKnB,UAAWC,IAAEC,MAAlB,UACI,cAAC,EAAD,CAAYP,KAAI,MAASE,MAAOA,EAAMuB,GAAIxB,KAAMA,EAAKwB,GAAItB,QAAQ,EAAOC,SAAQ,SAChF,cAAC,EAAD,CAAYJ,KAAI,SAAYE,MAAOA,EAAMwB,OAAQzB,KAAMA,EAAKyB,OAAQvB,QAAQ,EAAMC,SAAQ,UACzFmB,EAAc,cAAC,EAAD,CAAaX,QAASA,IAAa,S,iBCdjDe,EAAkB,uBAElBC,EAAqB,0BACrBC,EAAmB,wBACnBC,EAAgB,qBAEhBC,EAAe,oBACfC,EAAY,iBACZC,EAAmB,wBAEnBC,EAAW,iBAEXC,EAAiB,uBCAjBC,EAAiB,SAACC,GAAD,MAAe,CAACC,KAAMT,EAAkBQ,aACzDE,EAAe,SAAC3B,GAAD,MAAc,CAAC0B,KAAMR,EAAelB,YACnD4B,EAAa,SAACC,GAAD,MAAe,CAACH,KAAMJ,EAAUO,aC4B3CC,EAlCG,WACd,IAAMC,EAAWC,cACbC,EAAQ/B,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKQ,OAAOqB,SAF/B,EAIoB5B,oBAAS,GAJ7B,mBAIf6B,EAJe,KAIAC,EAJA,KAMpB3B,qBAAU,WACN2B,GAAiB,KAClB,CAACF,IAEJ,IAAMG,EAAe,SAAAC,GAAK,OAAIN,EDFE,SAACM,GAAD,MAAY,CAACX,KAAMP,EAAckB,SCE1BC,CAAqBD,KAWxDE,EAAQ,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAOO,OACjBC,KAAI,SAACC,EAAGC,GACL,IA3BQC,EAAOC,EA4Bf,OA5BQD,EA2BmB,kBAANF,EAAiBA,EAAI,GA3B3BG,EA4BYF,EAAI,EA5BR,qBAAKlD,UAAWC,IAAEoD,KAEbC,aAAYF,EAFjB,SAEuBD,GADbC,MA8BzC,OACI,qBAAKpD,UAAWC,IAAEC,MAAOqD,QAjBR,SAAAC,GAEZf,GAAkBe,EAAEC,OAAOC,YAE5BhB,GAAiB,GAEjBC,EAAaa,EAAEC,OAAOE,QAAQf,SAWlC,SACKE,K,kCCxBEc,EAXK,SAAC,GAA4B,IAA3BjE,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,KAAMiE,EAAc,EAAdA,SAC9B,OACI,6BACI,sBAAK7D,UAAWC,IAAEC,MAAlB,UACI,yCAAUP,EAAV,cAAoBC,EAApB,QACA,+BAAOiE,UCkBRC,EArBK,WAEhB,IAAMC,EAActD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKqD,WAChDC,EAAa,GAQjB,OAPIF,EAAYG,SACZD,EAAaF,EAAYf,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAatD,KAAMsD,EAAEtD,KACRC,KAAMqD,EAAErD,KACRiE,SAAUZ,EAAEkB,MACPlB,EAAErD,KAAOqD,EAAEkB,UAI/D,sBAAKnE,UAAWC,IAAEC,MAAlB,UACI,oBAAIF,UAAWC,IAAEmE,MAAjB,sBACA,oBAAIpE,UAAWC,IAAEoE,KAAjB,SACKJ,GAAc,W,iBCJhBK,EAbK,SAAC,GAA6B,IAA5B/D,EAA2B,EAA3BA,QAASgE,EAAkB,EAAlBA,aAC3B,OAAQ,qBAAKvE,UAAWC,IAAEuE,OAAlB,SACA,sBAAKxE,UAAWC,IAAEC,MAAlB,UACI,mBAAGF,UAAWC,IAAEM,QAAhB,SAA0BA,IAC1B,wBAAQgD,QAASgB,EACTvE,UAAWC,IAAEwE,UACbxC,KAAK,SAFb,sBCmBDyC,EAlBI,WACf,IAAMpC,EAAWC,cAEboC,EAAUlE,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKQ,OAAOyD,OACjDrE,EAAUE,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKJ,WAE9C,OAAQ,qCACCoE,EACK,cAAC,EAAD,CAAapE,QAASA,EACTgE,aAAc,kBAAMjC,ELCP,CAACL,KAAMN,OKAjC,KACN,cAAC,EAAD,CAAWT,aAAa,IACxB,cAAC,EAAD,IACA,cAAC,EAAD,Q,iBCKZ,SAAS2D,EAAeC,GACpB,IAAMC,EAAI,IAAIC,KAAKF,GAInB,OAHaC,EAAEE,WAGD,IAFFF,EAAEG,aAEY,IADdH,EAAEI,aAIHC,MA7BM,WAEjB,IAAMC,EAAe5E,aAAY,SAAAC,GAAK,OAAIA,EAAMb,MAAMwE,QAClDJ,EAAa,GAQjB,OAPIoB,EAAanB,SACbD,EAAaoB,EAAarC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAatD,KAAMsD,EAAEqC,QAAU,SAClB1F,KAAMqD,EAAErD,MAAQ,IAChBiE,SAAUgB,EAAe5B,EAAEsC,KACtBtC,EAAEsC,QAIvD,sBAAKvF,UAAWC,IAAEC,MAAlB,UACI,oBAAIF,UAAWC,IAAEmE,MAAjB,sBACA,oBAAIpE,UAAWC,IAAEoE,KAAjB,SACKJ,GAAc,WCRhBuB,EARK,WAChB,OAAQ,qCACA,cAAC,EAAD,CAAWtE,aAAa,IACxB,cAAC,EAAD,Q,kBCqBGuE,GAtBI,WACf,IAAMnD,EAAWC,cACbmD,EAAWC,cAKf,OACI,qBAAK3F,UAAWC,KAAEC,MAAlB,SAC2B,WAAtBwF,EAASE,SACJ,qCACE,wBAAQ3D,KAAK,SAASjC,UAAWC,KAAE4F,YAAatC,QAPzC,kBAAMjB,ERSiB,CAACL,KAAML,KQFrC,0BACA,cAAC,IAAD,CAAMkE,GAAE,SAAY9F,UAAWC,KAAE4F,YAAjC,sBAEF,qCACE,wBAAQ5D,KAAK,SAASjC,UAAWC,KAAE4F,YAAatC,QAVxC,kBAAMjB,ERSc,CAACL,KAAMH,KQCnC,sBACA,cAAC,IAAD,CAAMgE,GAAE,IAAO9F,UAAWC,KAAE4F,YAA5B,wBCcLE,OAzBf,WACI,IAAMzD,EAAWC,cAMjB,OALAxB,qBAAU,WACNuB,ETSgC,CAACL,KAAMX,MSRxC,IAIC,sBAAKtB,UAAWC,IAAE8F,IAAlB,UACI,cAACC,EAAA,EAAD,UACI,kDAEJ,eAAC,IAAD,CAAOC,KAAK,IAAZ,UACI,cAAC,GAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOA,KAAK,SACLC,UAAWV,EAAaW,OAAK,IACpC,cAAC,IAAD,CAAOF,KAAK,IACLC,UAAWxB,c,8CC1BzB0B,G,MAAUC,OAAa,CAChCC,iBAAiB,EACjBC,QAAQ,GAAD,OCLY,wBDKZ,QACPC,QAAS,CACL,eAAgB,sBELXC,GAAM,WAEX,OAAOL,GAAQM,IAAR,SACFC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAHhBJ,GAAM,WAMX,OAAOL,GAAQU,KAAR,eACFH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAPhBJ,GAAM,WAUX,OAAOL,GAAQM,IAAR,QACFC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAXhBJ,GAAM,SAaNM,GACL,OAAOX,GAAQU,KAAR,+BAAsCC,EAAtC,MACFJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAfhBJ,GAAM,WAkBX,OAAOL,GAAQU,KAAR,cACFH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAnBhBJ,GAAM,WAsBX,OAAOL,GAAQM,IAAR,aACFC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,S,aCpBZG,I,aAUPC,I,aAWAC,I,aAUAC,I,aAWAC,I,aASAC,IAnDH,SAAUL,KAAV,kEACH,OADG,SACGM,aAAI,CACNC,aAAU7F,EAAcwF,IACxBK,aAAU5F,EAAWwF,IACrBI,aAAU3F,EAAkBwF,IAC5BG,aAAUzF,EAAgBuF,IAC1BE,aAAUjG,EAAiB2F,MAN5B,wCAUP,SAAUA,KAAV,0EAE4B,OAF5B,kBAEkCO,aAAKf,IAFvC,OAG6B,OADfgB,EAFd,gBAGmCD,aAAKf,IAHxC,OAIQ,OADMiB,EAHd,gBAIcC,aAAI5F,EAAe0F,IAJjC,OAKQ,OALR,UAKcE,aAAIxF,EAAWuF,IAL7B,gCAOQ,OAPR,oCAOcC,aAAIzF,EAAa,qBAP/B,uDAWA,SAAUgF,GAAV,gFAAmBtE,EAAnB,EAAmBA,MAAnB,SAEaA,EAFb,iDAG6B,OAH7B,SAGmC4E,aAAKf,GAAc7D,GAHtD,OAIQ,OADMgF,EAHd,gBAIcD,ablBiC,CAAC1F,KAAMV,EAAoBS,SakBvC4F,IAJnC,+BAMQ,OANR,oCAMcD,aAAIzF,EAAa,qBAN/B,uDAUA,SAAUiF,KAAV,0EAEyB,OAFzB,kBAE+BK,aAAKf,IAFpC,OAGyB,OADXzE,EAFd,gBAG+BwF,aAAKf,IAHpC,OAIQ,OADMrE,EAHd,gBAIcuF,aAAI5F,EAAeC,IAJjC,OAKQ,OALR,UAKc2F,aAAIxF,EAAWC,IAL7B,gCAOQ,OAPR,oCAOcuF,aAAIzF,EAAa,qBAP/B,uDAWA,SAAUkF,KAAV,wEAEuB,OAFvB,kBAE6BI,aAAKf,IAFlC,OAGQ,OADIzE,EAFZ,gBAGc2F,aAAI5F,EAAeC,IAHjC,8BAKQ,OALR,mCAKc2F,aAAIzF,EAAa,qBAL/B,sDASA,SAAUmF,KAAV,wEAEuB,OAFvB,kBAE6BG,aAAKf,IAFlC,OAGQ,OADIrE,EAFZ,gBAGcuF,aAAIxF,EAAWC,IAH7B,8BAKQ,OALR,mCAKcuF,aAAIzF,EAAa,qBAL/B,sD,aCxDa2F,GAAgB,CACzB1G,OAAQ,CACJE,OAAQ,IACRD,GAAI,IACJoB,MAAO,CACH,CACI,EACA,EACA,GAEJ,CACI,EACA,EACA,GAEJ,CACI,EACA,EACA,IAGRsF,SAAU,KAEd9D,QAAS,GACTzD,QAAQ,0BAGCwH,GAAiB,CAC1B3G,GAAI,EACJC,OAAQ,EACR2G,EAAG,EACHC,EAAG,EACH5D,KAAM,ICpBK6D,GATM,WAAqC,IAApCxH,EAAmC,uDAA3BqH,GAAgBI,EAAW,uCACrD,OAAQA,EAAOlG,MACX,KAAKJ,EACD,OAAO,6BAAInB,GAAUyH,EAAO/F,SAASjB,QACzC,QACI,OAAOT,I,SC4Bb0H,GAAsB,SAAC9C,GACzB,OAAIA,EACM,GAAN,OAAqB,OAAXA,EAAkB,MAAQ,SAApC,YAEM,eAIR+C,GAAmB,SAACC,EAAQC,GAC9B,IAAIC,EAASF,EAAO9F,MAAMO,OAGtB0F,EAFSF,EAAO/F,MAAMO,OAEL2F,QAAO,SAACC,EAAG1F,EAAGC,GAC/B,OAAID,IAAMuF,EAAOtF,GACNyF,EAAEC,OAAO,CAAC,CACbjJ,KAAM4I,EAAOlH,SAAW4B,EAClB,SACA,MACNrD,KAAMqD,EACNkB,KAAOjB,EAAI,KAGRyF,IAEZ,IAICxH,EAFYqH,EAAOK,QAAO,SAAA5F,GAAC,MAAiB,kBAANA,KAAgBiB,OAAS,EAG7D,CAACuE,EAAQK,MAAK,SAAA7F,GAAC,MAAe,WAAXA,EAAEtD,QAAoB8I,EAAQK,MAAK,SAAA7F,GAAC,MAAe,QAAXA,EAAEtD,SAC7D,CAAC8I,EAAQK,MAAK,SAAA7F,GAAC,MAAe,QAAXA,EAAEtD,QAAiB8I,EAAQK,MAAK,SAAA7F,GAAC,MAAe,WAAXA,EAAEtD,SAIhE,OAFAwB,EAASA,EAAO0H,QAAO,SAAA5F,GAAC,MAAiB,qBAANA,MAKjC8F,GAA0B,SAACC,EAAKC,GAClC,IAAIC,EAAQF,EAAIjG,OAAOoG,WAAU,SAAAlG,GAAC,MAAiB,kBAANA,KAC7C,OAAOiG,GAAS,EAAI,CAAC,CAACvJ,KAAM,MAAOC,KAAMqJ,EAAQ9E,KAAO+E,EAAQ,IAAO,IAG5DE,GAvEK,WAAoC,IAAnC1I,EAAkC,uDAA1BmH,GAAeM,EAAW,uCACnD,OAAQA,EAAOlG,MACX,KAAKR,EACD,OAAO,6BACAf,GADP,IAEIH,QAAS4H,EAAO5H,UAExB,KAAKgB,EACD,IAAIhB,EAAU4H,EAAOnG,SAASb,OAAOyD,IAC/BwD,GAAoBD,EAAOnG,SAASb,OAAOmE,QAC3C5E,EAAMH,QACZ,OAAO,6BACAG,GADP,IAEIsD,QAAQ,GAAD,oBAAMtD,EAAMsD,SAAZ,aAAwBqE,GAAiB3H,EAAMS,OAAQgH,EAAOnG,SAASb,UAC9EA,OAAO,gBAAKgH,EAAOnG,SAASb,QAC5BZ,QAASA,IAEjB,KAAKiB,EACD,OAAO,6BACAd,GADP,IAEIsD,QAAS+E,GAAwBZ,EAAOnG,SAASb,OAAOqB,MAAO2F,EAAOnG,SAASb,OAAOC,IACtFD,OAAO,gBAAKgH,EAAOnG,SAASb,QAC5BZ,QAAS,uBAEjB,QACI,OAAOG,IC1Bb2I,GAAOC,eAETC,GAAWC,aAAgB,CAC3B3J,MAAOqI,GACPvH,KAAMyI,KAGNK,GAAQC,aAAYH,GAAUI,aAAgBN,KAElDA,GAAKO,IAAI5C,IAEMyC,UCVfI,IAASC,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACI,cAAC,GAAD,QAEUM,SAASC,eAAe,W","file":"static/js/main.cd32b76a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"playerinfo_block__1RWS7\",\"playerName\":\"playerinfo_playerName__2bBto\",\"active\":\"playerinfo_active__1d9qR\",\"team\":\"playerinfo_team__x380p\",\"score\":\"playerinfo_score__1wAyq\",\"forRight\":\"playerinfo_forRight__1SO5g\",\"forLeft\":\"playerinfo_forLeft__2S84S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"navigation_block__35CLs\",\"btnLikeLink\":\"navigation_btnLikeLink__QGS-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jacket\":\"simplemodal_jacket__3E0La\",\"block\":\"simplemodal_block__1TRpl\",\"message\":\"simplemodal_message__WyTaH\",\"submitBtn\":\"simplemodal_submitBtn__CPY3b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"gamehistory_block__4vSue\",\"title\":\"gamehistory_title__FXR7h\",\"list\":\"gamehistory_list__ZuNX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"scorehistory_block__13pd-\",\"title\":\"scorehistory_title___VdSC\",\"list\":\"scorehistory_list__2D3VU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"warnmessage_block__3QNZE\",\"message\":\"warnmessage_message__1ZmSB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"gamefield_block__3lkhH\",\"cell\":\"gamefield_cell__2ettv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__2cZLa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"gametitle_block__1vGp5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"historyline_block__1I0l8\"};","import React from 'react'\r\nimport s from './playerinfo.module.scss'\r\n\r\nconst PlayerInfo = ({name, team, score, active, position}) => {\r\n    return (\r\n        <div className={s.block}>\r\n            <h2 className={`${s.playerName} ${active && s.active}`}>{name}</h2>\r\n            <span className={`${s.team} ${position === \"right\" ? s.forRight : null}`}>\r\n                {`| ${team} |`}\r\n            </span>\r\n            <span className={`${s.score} ${position === \"left\" ? s.forLeft : null}`}>\r\n                {score}\r\n            </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PlayerInfo;","import React, {useState, useEffect} from 'react'\r\nimport s from './warnmessage.module.scss'\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst WarnMessage = ({message}) => {\r\n    let text = useSelector(state => state.game.message);\r\n    let [viewMessage, setViewMessage] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setViewMessage(false), 2000);\r\n        //return clearTimeout(hideMessage);\r\n    }, [viewMessage]);\r\n    useEffect(() => {\r\n        setViewMessage(true)\r\n    }, [text]);\r\n\r\n    return (<>\r\n            {viewMessage\r\n                ? <div className={s.block}>\r\n                    <h2 className={s.message}>{message}</h2>\r\n                </div>\r\n                : null\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default WarnMessage;","import React from 'react'\r\nimport s from './gametitle.module.scss'\r\nimport PlayerInfo from \"./PlayerInfo/PlayerInfo\";\r\nimport WarnMessage from \"./WarnMessage/WarnMessage\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst GameTitle = ({messageLine}) => {\r\n    let message = useSelector(state => state.game.message);\r\n    let score = useSelector(state => state.score);\r\n    let team = useSelector(state => state.game.result);\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            <PlayerInfo name={`Bot`} score={score.ai} team={team.ai} active={false} position={`left`}/>\r\n            <PlayerInfo name={`Player`} score={score.player} team={team.player} active={true} position={`right`}/>\r\n            {messageLine ? <WarnMessage message={message}/> : null}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GameTitle;","/* for first load */\r\nexport const SET_SERVER_DATA = 'root/SET_SERVER_DATA';\r\n/* for update \"game\" reducer */\r\nexport const UPDATE_GAME_RESULT = 'game/UPDATE_GAME_RESULT';\r\nexport const RESET_GAME_FIELD = 'game/RESET_GAME_FIELD';\r\nexport const ERROR_MESSAGE = 'game/ERROR_MESSAGE';\r\n/* for activate sagas for \"game\" */\r\nexport const SET_MOVE_ACT = 'game/SET_MOVE_ACT';\r\nexport const NEXT_GAME = 'game/NEXT_GAME';\r\nexport const START_GAME_AGAIN = 'game/START_GAME_AGAIN';\r\n/* for update \"score\" reducer */\r\nexport const NEW_GAME = 'score/NEW_GAME';\r\n/* for activate sagas for \"score\" */\r\nexport const START_NEW_GAME = 'score/START_NEW_GAME';","import {\r\n    ERROR_MESSAGE,\r\n    NEW_GAME,\r\n    NEXT_GAME,\r\n    RESET_GAME_FIELD,\r\n    SET_MOVE_ACT,\r\n    SET_SERVER_DATA,\r\n    START_GAME_AGAIN,\r\n    START_NEW_GAME,\r\n    UPDATE_GAME_RESULT\r\n} from \"./types\";\r\n\r\nexport const updateGameResult = (newField) => ({type: UPDATE_GAME_RESULT, newField});\r\nexport const resetGameField = (newField) => ({type: RESET_GAME_FIELD, newField});\r\nexport const errorMessage = (message) => ({type: ERROR_MESSAGE, message});\r\nexport const setNewGame = (newScore) => ({type: NEW_GAME, newScore});\r\n\r\nexport const setMoveActionCreator = (index) => ({type: SET_MOVE_ACT, index});\r\nexport const nextGameActionCreator = () => ({type: NEXT_GAME});\r\nexport const startAgainGameActionCreator = () => ({type: START_GAME_AGAIN});\r\nexport const startNewGameActionCreator = () => ({type: START_NEW_GAME});\r\n\r\n\r\nexport const setInitServerData = () => ({type: SET_SERVER_DATA});","import React, {useState, useEffect} from 'react'\r\nimport s from './gamefield.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setMoveActionCreator} from \"../../../redux/actions\";\r\n\r\nconst SingleCell = (value, key) => <div className={s.cell}\r\n                                        key={key}\r\n                                        data-index={key}>{value}</div>;\r\n\r\nconst GameField = () => {\r\n    const dispatch = useDispatch();\r\n    let board = useSelector(state => state.game.result.board);\r\n    /* when first render -> disable cells */\r\n    let [disabledCells, setDisabledCells] = useState(true);\r\n    /* if board is changed -> activation cells */\r\n    useEffect(() => {\r\n        setDisabledCells(false)\r\n    }, [board]);\r\n\r\n    const sendMoveData = index => dispatch(setMoveActionCreator(index));\r\n    const onCellsClick = e => {\r\n        /* if cells is active and have empty content */\r\n        if (!disabledCells && !e.target.innerHTML) {\r\n            /* disable cells and wait while board will been changed */\r\n            setDisabledCells(true);\r\n            /* dispatch action to saga -> query to server -> wait changes */\r\n            sendMoveData(e.target.dataset.index)\r\n        }\r\n    };\r\n    /* create cells for field if board is exist */\r\n    let arrCells = board?.flat()\r\n        .map((v, i) => {\r\n            let content = typeof v !== 'number' ? v : \"\";\r\n            return SingleCell(content, i + 1)\r\n        });\r\n\r\n    return (\r\n        <div className={s.block} onClick={onCellsClick}>\r\n            {arrCells}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GameField;","import React from 'react'\r\nimport s from './historyline.module.scss'\r\n\r\nconst HistoryLine = ({name, team, lastStep}) => {\r\n    return (\r\n        <li>\r\n            <div className={s.block}>\r\n                <span>{`${name} ( ${team} )`}</span>\r\n                <span>{lastStep}</span>\r\n            </div>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default HistoryLine;","import React from 'react'\r\nimport s from './gamehistory.module.scss'\r\nimport HistoryLine from \"./HistoryLine/HistoryLine\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst GameHistory = () => {\r\n\r\n    const historyGame = useSelector(state => state.game.history);\r\n    let arrHistory = [];\r\n    if (historyGame.length) {\r\n        arrHistory = historyGame.map(v => <HistoryLine name={v.name}\r\n                                                       team={v.team}\r\n                                                       lastStep={v.move}\r\n                                                       key={v.team + v.move}/>);\r\n    }\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            <h3 className={s.title}>History:</h3>\r\n            <ol className={s.list}>\r\n                {arrHistory || null}\r\n            </ol>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GameHistory;","import React from 'react'\r\nimport s from './simplemodal.module.scss'\r\n\r\nconst SimpleModal = ({message, submitAction}) => {\r\n    return (<div className={s.jacket}>\r\n            <div className={s.block}>\r\n                <p className={s.message}>{message}</p>\r\n                <button onClick={submitAction}\r\n                        className={s.submitBtn}\r\n                        type='button'>OK\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SimpleModal;","import React from 'react';\r\nimport GameTitle from \"./GameTitle/GameTitle\";\r\nimport GameField from \"./GameField/GameField\";\r\nimport GameHistory from \"./GameHistory/GameHistory\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SimpleModal from \"./ModalScreen/SimpleModal\";\r\nimport {nextGameActionCreator} from \"../../redux/actions\";\r\n\r\nconst GameScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    let endGame = useSelector(state => state.game.result.end);\r\n    let message = useSelector(state => state.game.message);\r\n\r\n    return (<>\r\n            {endGame\r\n                ? <SimpleModal message={message}\r\n                               submitAction={() => dispatch(nextGameActionCreator())}/>\r\n                : null}\r\n            <GameTitle messageLine={true}/>\r\n            <GameField/>\r\n            <GameHistory/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GameScreen;","import React from 'react'\r\nimport s from './scorehistory.module.scss'\r\nimport {useSelector} from \"react-redux\";\r\nimport HistoryLine from \"../../GameScreen/GameHistory/HistoryLine/HistoryLine\";\r\n\r\nconst ScoreHistory = () => {\r\n\r\n    const historyScore = useSelector(state => state.score.list);\r\n    let arrHistory = [];\r\n    if (historyScore.length) {\r\n        arrHistory = historyScore.map(v => <HistoryLine name={v.winner || 'Nobody'}\r\n                                                        team={v.team || '-'}\r\n                                                        lastStep={_timeConverter(v.ts)}\r\n                                                        key={v.ts}/>);\r\n    }\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            <h3 className={s.title}>History:</h3>\r\n            <ol className={s.list}>\r\n                {arrHistory || null}\r\n            </ol>\r\n        </div>\r\n    )\r\n};\r\n\r\nfunction _timeConverter(timestamp) {\r\n    const a = new Date(timestamp);\r\n    const hour = a.getHours();\r\n    const min = a.getMinutes();\r\n    const sec = a.getSeconds();\r\n    return hour + ':' + min + ':' + sec\r\n}\r\n\r\nexport default ScoreHistory;","import React from 'react';\r\nimport GameTitle from \"../GameScreen/GameTitle/GameTitle\";\r\nimport ScoreHistory from \"./ScoreHistory/ScoreHistory\";\r\n\r\nconst ScoreScreen = () => {\r\n    return (<>\r\n            <GameTitle messageLine={false}/>\r\n            <ScoreHistory/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ScoreScreen;","import React from 'react'\r\nimport s from './navigation.module.scss'\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {startAgainGameActionCreator, startNewGameActionCreator} from \"../../redux/actions\";\r\n\r\nconst Navigation = () => {\r\n    const dispatch = useDispatch();\r\n    let location = useLocation();\r\n\r\n    const onNewGameClick = () => dispatch(startAgainGameActionCreator());\r\n    const onNewScoreClick = () => dispatch(startNewGameActionCreator());\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            {location.pathname !== '/score'\r\n                ? <>\r\n                    <button type=\"button\" className={s.btnLikeLink} onClick={onNewGameClick}>Restart game</button>\r\n                    <Link to={`/score`} className={s.btnLikeLink}>Score</Link>\r\n                </>\r\n                : <>\r\n                    <button type=\"button\" className={s.btnLikeLink} onClick={onNewScoreClick}>New game</button>\r\n                    <Link to={`/`} className={s.btnLikeLink}>Game</Link>\r\n                </>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React, {useEffect} from 'react';\nimport s from './app.module.scss'\nimport {Route, Switch} from \"react-router-dom\";\nimport Helmet from \"react-helmet\";\nimport {useDispatch} from \"react-redux\";\nimport GameScreen from \"./components/GameScreen/GameScreen\";\nimport ScoreScreen from \"./components/ScoreScreen/ScoreScreen\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport {setInitServerData} from \"./redux/actions\";\n\n\nfunction App() {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(setInitServerData())\n    }, []);\n\n\n    return (\n        <div className={s.App}>\n            <Helmet>\n                <title>{`Tic-Tac-Toe`}</title>\n            </Helmet>\n            <Route path=\"*\">\n                <Navigation/>\n                <Switch>\n                    <Route path='/score'\n                           component={ScoreScreen} exact/>\n                    <Route path='/'\n                           component={GameScreen}/>\n                </Switch>\n            </Route>\n        </div>\n    );\n}\n\nexport default App;\n","import * as axios from \"axios\";\r\nimport {rootUrl} from './constants';\r\n\r\nexport const request = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `${rootUrl}/api`,\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n});","export const rootUrl = \"http://localhost:3000\";","import {request} from \"./axios\";\r\n\r\nexport const API = {\r\n    getScore() {\r\n        return request.get(`score`)\r\n            .then(res => res.data);\r\n    },\r\n    resetScore() {\r\n        return request.post(`score/reset`)\r\n            .then(res => res.data)\r\n    },\r\n    getGameInfo() {\r\n        return request.get(`game`)\r\n            .then(res => res.data)\r\n    },\r\n    makeMove(cellIndex) {\r\n        return request.post(`game/move`, `{\"index\":${cellIndex}}`)\r\n            .then(res => res.data)\r\n    },\r\n    gameReset() {\r\n        return request.post(`game/reset`)\r\n            .then(res => res.data)\r\n    },\r\n    nextGame() {\r\n        return request.get(`game/next`)\r\n            .then(res => res.data);\r\n    }\r\n};","import {takeEvery, put, call, all} from 'redux-saga/effects'\r\nimport {NEXT_GAME, SET_MOVE_ACT, SET_SERVER_DATA, START_GAME_AGAIN, START_NEW_GAME} from \"./types\";\r\nimport {API} from \"../api/Api\";\r\nimport {errorMessage, resetGameField, setNewGame, updateGameResult} from \"./actions\";\r\n\r\nexport function* sagaWatcher() {\r\n    yield all([\r\n        takeEvery(SET_MOVE_ACT, setMove),\r\n        takeEvery(NEXT_GAME, nextGame),\r\n        takeEvery(START_GAME_AGAIN, resetGame),\r\n        takeEvery(START_NEW_GAME, newGame),\r\n        takeEvery(SET_SERVER_DATA, setData),\r\n    ])\r\n}\r\n\r\nfunction* setData() {\r\n    try {\r\n        const newGameData = yield call(API.getGameInfo);\r\n        const newScoreData = yield call(API.getScore);\r\n        yield put(resetGameField(newGameData));\r\n        yield put(setNewGame(newScoreData));\r\n    } catch (e) {\r\n        yield put(errorMessage('Something wrong!'));\r\n    }\r\n}\r\n\r\nfunction* setMove({index}) {\r\n    try {\r\n        if (!index) return;\r\n        const newFieldData = yield call(API.makeMove, index);\r\n        yield put(updateGameResult(newFieldData));\r\n    } catch (e) {\r\n        yield put(errorMessage('Something wrong!'));\r\n    }\r\n}\r\n\r\nfunction* nextGame() {\r\n    try {\r\n        const newField = yield call(API.nextGame);\r\n        const newScore = yield call(API.getScore);\r\n        yield put(resetGameField(newField));\r\n        yield put(setNewGame(newScore));\r\n    } catch (e) {\r\n        yield put(errorMessage('Something wrong!'));\r\n    }\r\n}\r\n\r\nfunction* resetGame() {\r\n    try {\r\n        let newField = yield call(API.gameReset);\r\n        yield put(resetGameField(newField));\r\n    } catch (e) {\r\n        yield put(errorMessage('Something wrong!'));\r\n    }\r\n}\r\n\r\nfunction* newGame() {\r\n    try {\r\n        let newScore = yield call(API.resetScore);\r\n        yield put(setNewGame(newScore));\r\n    } catch (e) {\r\n        yield put(errorMessage('Something wrong!'));\r\n    }\r\n}","export const initGameState = {\r\n    result: {\r\n        player: \"X\",\r\n        ai: \"O\",\r\n        board: [\r\n            [\r\n                1,\r\n                2,\r\n                3\r\n            ],\r\n            [\r\n                4,\r\n                5,\r\n                6\r\n            ],\r\n            [\r\n                7,\r\n                8,\r\n                9\r\n            ]\r\n        ],\r\n        nextMove: \"X\"\r\n    },\r\n    history: [],\r\n    message: `Game has been started!`\r\n};\r\n\r\nexport const initScoreState = {\r\n    ai: 0,\r\n    player: 0,\r\n    X: 0,\r\n    O: 0,\r\n    list: []\r\n};","import {initScoreState} from \"./initState\";\r\nimport {NEW_GAME} from \"./types\";\r\n\r\nconst ScoreReducer = (state = initScoreState, action) => {\r\n    switch (action.type) {\r\n        case NEW_GAME:\r\n            return {...state, ...action.newScore.result};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ScoreReducer;","import {initGameState} from \"./initState\";\r\nimport {\r\n    UPDATE_GAME_RESULT,\r\n    RESET_GAME_FIELD,\r\n    ERROR_MESSAGE\r\n} from './types'\r\n\r\nconst GameReducer = (state = initGameState, action) => {\r\n    switch (action.type) {\r\n        case ERROR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.message\r\n            };\r\n        case UPDATE_GAME_RESULT :\r\n            let message = action.newField.result.end\r\n                ? createWinnerMessage(action.newField.result.winner)\r\n                : state.message;\r\n            return {\r\n                ...state,\r\n                history: [...state.history, ...createHistoryLog(state.result, action.newField.result)],\r\n                result: {...action.newField.result},\r\n                message: message\r\n            };\r\n        case RESET_GAME_FIELD:\r\n            return {\r\n                ...state,\r\n                history: createHistoryLogAtStart(action.newField.result.board, action.newField.result.ai),\r\n                result: {...action.newField.result},\r\n                message: 'Start a next game!'\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst createWinnerMessage = (winner) => {\r\n    if (winner) {\r\n        return `${winner === 'ai' ? 'Bot' : \"Player\"} is win!`\r\n    } else {\r\n        return `Nobody won!`\r\n    }\r\n};\r\n\r\nconst createHistoryLog = (objOld, objNew) => {\r\n    let arrOld = objOld.board.flat();\r\n    let arrNew = objNew.board.flat();\r\n\r\n    let indexes = arrNew.reduce((t, v, i) => {\r\n        if (v !== arrOld[i]) {\r\n            return t.concat([{\r\n                name: objNew.player === v\r\n                    ? 'Player'\r\n                    : 'Bot',\r\n                team: v,\r\n                move: (i + 1)\r\n            }])\r\n        } else {\r\n            return t\r\n        }\r\n    }, []);\r\n\r\n    let firstStep = arrOld.filter(v => typeof v !== 'number').length % 2;\r\n\r\n    let result = firstStep\r\n        ? [indexes.find(v => v.name === \"Player\"), indexes.find(v => v.name === \"Bot\")]\r\n        : [indexes.find(v => v.name === \"Bot\"), indexes.find(v => v.name === \"Player\")];\r\n\r\n    result = result.filter(v => typeof v !== 'undefined');\r\n\r\n    return result;\r\n};\r\n\r\nconst createHistoryLogAtStart = (arr, aiTeam) => {\r\n    let found = arr.flat().findIndex(v => typeof v === 'string');\r\n    return found >= 0 ? [{name: 'Bot', team: aiTeam, move: (found + 1)}] : []\r\n};\r\n\r\nexport default GameReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {sagaWatcher} from './saga'\r\nimport ScoreReducer from \"./ScoreReducer\";\r\nimport GameReducer from \"./GameReducer\";\r\n\r\nconst saga = createSagaMiddleware();\r\n\r\nlet reducers = combineReducers({\r\n    score: ScoreReducer,\r\n    game: GameReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(saga));\r\n\r\nsaga.run(sagaWatcher);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport App from './App';\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root')\n);"],"sourceRoot":""}